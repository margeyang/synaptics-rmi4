Updates for driver version 1.8 (in progress)
--------------------------------------------

* sysfs and debugfs implementations have been split out into their own modules.
Building of control modules is controlled by the CONFIG_RMI4_CONTROL config
option.  This simplifies the source for the functional modules, and results
in a smaller kernel footprint for the driver.  In addition to updating the files
drivers/input/rmi4/Kconfig and drivers/input/rmi4/Makefile appropriately,
you'll need to update your defconfig file appropriately to turn this on.  See
README-SYNAPTICS.txt for more information.

* add support for RMI4 F05 (capacitance image reporting).

* added support for RMI4 F12 (new style 2D sensing, aka Waikiki).

* Updated to use rmi_i2c.c to use module_i2c_driver() for setup.  If you're
using older kernels, you'll need to backport this macro into
include/linux/i2c.h. See the README-SYNAPTICS.txt file for instructions.

* Merge changes from Dmitry Torokhov's input tree, branch synaptics-rmi4.

* Removed "enabled" sysfs file.  Sensor reporting is now automatically
disabled when you open /dev/rmiX, and re-enabled when it is closed.
NOTE: This means you'll need the most recent version of TarsierCDCI
(a.k.a RED) - older versions will still look for "enabled" and might
crash when they don't find it.

* Added gpio_request() call when exporting ATTN via gpiolib.

* Fix ordering of rmi bus debugfs setup.


Updates for driver version 1.7 (final as of 2012-12-14)
-------------------------------------------------------

* if you're using kernel 3.2.x or older, you probably need to backport the
module_driver() macro into your copy of include/linux/driver.h.  See the
README-SYNAPTICS.txt file for instructions.

* The Kconfig options have been further simplified.  CONFIG_RMI4_BUS and
CONFIG_RMI4_GENERIC are replaced by a single control, CONFIG_RMI4_CORE.
You'll need to update your defconfig file appropriately.

* some debugfs and sysfs files have moved around.  If you have tools or scripts
that depend on these files, you'll need to update the paths.


Updates for driver version 1.6 (final as of 2012-11-16)
-------------------------------------------------------

* The driver_name field of rmi_device_platform_data has been removed, as it was
no longer necessary.

* Polling support has been added.  Polling works on I2C and SPIv1.  It does not
work for SPIv2, since that requires a working ATTN line.  For more info on
setting up polling, see README-SYNAPTICS.txt.

* A sensor_type field has been added to the F11 per-sensor platform data.  This
allows you to specify whether the device is touchscreen or touchpad type sensor
in cases where the register map does not allow this to be determined
programmatically.


Updates for driver version 1.5 (final as of 2012-10-05)
-------------------------------------------------------

* F11 platform data has been updated to a per-sensor basis (remember that a
single F11 module might have more than one 2D sensor attached to it).

* F11 virtual button maps have been switched to a per-sensor basis.

* F11 Type B support is always on, and removed from Kconfig.  Per-sensor
platformdata is provided if you need to force Multifinger Type A input.

* IMPORTANT: the RMI4 driver has been converted over to the Linux kernel bus
and driver model.  This means that the sysfs file structure has changed.  Some
files have moved to debugfs, and for remaining files, the sysfs tree structure
has changed.  Refer to Documentation/ABI/testing/debugfs-rmi4 and sysfs-rmi4
for full details.

* ALSO IMPORTANT: The Kconfig options have been simplified.  Several have been
eliminated, and others have been consolidated.  Please consult Kconfig and make
any necessary related changes to your kernel configuration.

* ATTN interrupts are not enabled until the F01 function driver is bound to
the sensor.  This should eliminate spurious interrupts that were seen during
the system bootup process.
